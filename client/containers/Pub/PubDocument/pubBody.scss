@use 'styles/vendor.scss';

$bp: vendor.$bp-namespace;

@import 'styles/variables.scss';

$pub-body-font-size: if-is-export(14px, 20px);

.pub-body-component .editor.ProseMirror,
.pub-body-styles {
	h1#abstract:first-child {
		color: var(--community-accent-dark);
		text-transform: uppercase;
		font-size: 1em;
		font-weight: 500;
		padding-top: 1em;
		& + p {
			border-bottom: 1px solid #ccc;
			padding-bottom: 1em;
		}
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		margin-bottom: 0.5em;
		line-height: 1em;
		font-weight: 500;
		font-family: $header-font;
		letter-spacing: 1px;
		a {
			text-decoration: underline;
		}
	}
	h1 {
		font-size: 1.4em;
		font-weight: 600;
		line-height: 1.3em;
		letter-spacing: 0px;
	}
	h2 {
		font-size: 1.3em;
		line-height: 1.3em;
		font-weight: 500;
		letter-spacing: 0px;
	}
	h3 {
		font-size: 1.2em;
		line-height: 1.3em;
		font-weight: 400;
		letter-spacing: 0.5px;
	}
	h4 {
		font-size: 1em;
		line-height: 1.3em;
		font-weight: 500;
		letter-spacing: 0.5px;
	}
	h5 {
		font-size: 1em;
		line-height: 1.3em;
		font-weight: 400;
		letter-spacing: 0.5px;
	}
	h6 {
		font-size: 1em;
		line-height: 1.3em;
		font-weight: 300;
		letter-spacing: 0.5px;
	}
	* + h1,
	* + h2,
	* + h3,
	* + h4,
	* + h5,
	* + h6 {
		margin-top: 1.4em;
	}
	p,
	li {
		font-family: $body-font;
		letter-spacing: 0.01rem;
		font-weight: 400;
		font-style: normal;
		line-height: 1.7;
		letter-spacing: -0.003em;
		word-break: break-word;
	}

	li {
		margin: 0;
		> p {
			margin: 0;
		}
	}

	p {
		margin: 0em 0em 1em;
	}

	ul > li::marker {
		font-size: 0.8em;
	}

	ul,
	ol {
		padding-left: 1em;
		margin: 0em 0em 1em;
		ul,
		ol {
			margin-bottom: 0em;
		}
	}
	// keep OL markers inside TD elements, esp. as digits increase
	td ol {
		padding-left: 0;
		list-style-position: inside;
		li p {
			word-break: break-word;
			&:first-child {
				display: inline;
			}
		}
	}
	hr {
		margin: 1em 0em;
	}
	pre {
		box-shadow: none;
		white-space: pre;
		overflow: hidden;
		overflow-x: auto;
		code {
			display: block;
			white-space: pre;
			background-color: transparent;
			padding: 0em;
		}
	}
	pre.codeblock-wrapper {
		// accomodate language dropdown without showing overflow
		margin-bottom: 0;
		padding-bottom: 30px;
	}
	code {
		background-color: rgba(27, 31, 35, 0.06);
		border-radius: 2px;
		font-size: 0.8em;
		margin: 0;
		padding: 0.2em 0.4em;
	}
	blockquote {
		line-height: inherit;
		font-size: 1em;
		margin: 0 0 1em;
		border-left: solid 4px rgba(181, 181, 181, 0.5);
		padding: 0 1em;
	}
	.file {
		font-size: 0.75em;
	}
	figcaption {
		font-size: 15px;
		p {
			margin-bottom: 0em;
			line-height: 1.2em;
			font-family: $base-font;
		}
	}
	iframe {
		border: 0px solid transparent;
	}
	*:first-child:not(.discussion-thread) {
		margin-top: 0em;
	}
}

.pub-body-component {
	position: relative;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-moz-font-feature-settings: 'liga' on;
	font-feature-settings: 'liga' on;
	font-size: $pub-body-font-size;
	min-height: 300px;
	margin-top: 25px;
	.editor.ProseMirror {
		min-height: 150px;
	}
	.#{$bp}-callout.working-draft {
		display: flex;
		align-items: center;
		span {
			flex-grow: 1;
			flex-shrink: 1;
		}
	}
	.permanent {
		background-color: #ffc940;
	}
}

.pub-body-alert {
	.error-time {
		font-weight: bold;
	}
}
