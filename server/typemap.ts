import { type CollectionAttributes } from './collection/model-old';
import { type CollectionAttributionAttributes } from './collectionAttribution/model';
import { type CollectionPubAttributes } from './collectionPub/model';
import { type CommenterAttributes } from './commenter/model';
import { type CommunityAttributes } from './community/model';
import { type CommunityAdminAttributes } from './communityAdmin/model';
import { type CrossrefDepositRecordAttributes } from './crossrefDepositRecord/model';
import { type CustomScriptAttributes } from './customScript/model';
import { type DepositTargetAttributes } from './depositTarget/model';
import { type DiscussionAttributes } from './discussion/model';
import { type DiscussionAnchorAttributes } from './discussionAnchor/model';
import { type DocAttributes } from './doc/model';
import { type DraftAttributes } from './draft/model';
import { type ExportAttributes } from './export/model';
import { type ExternalPublicationAttributes } from './externalPublication/model';
import { type FeatureFlagAttributes } from './featureFlag/model';
import { type FeatureFlagUserAttributes } from './featureFlagUser/model';
import { type FeatureFlagCommunityAttributes } from './featureFlagCommunity/model';
import { type ZoteroIntegrationAttributes } from './zoteroIntegration/model';
import { type IntegrationDataOAuth1Attributes } from './integrationDataOAuth1/model';
import { type LandingPageFeatureAttributes } from './landingPageFeature/model';
import { type MemberAttributes } from './member/model';
import { type MergeAttributes } from './merge/model';
import { type OrganizationAttributes } from './organization/model';
import { type PageAttributes } from './page/model';
import { type PubAttributes } from './pub/model';
import { type PubAttributionAttributes } from './pubAttribution/model';
import { type PubEdgeAttributes } from './pubEdge/model';
import { type PubManagerAttributes } from './pubManager/model';
import { type PubVersionAttributes } from './pubVersion/model';
import { type PublicPermissionsAttributes } from './publicPermissions/model';
import { type ReleaseAttributes } from './release/model';
import { type ReviewEventAttributes } from './reviewEvent/model';
import { type ScopeSummaryAttributes } from './scopeSummary/model';
import { type SubmissionAttributes } from './submission/model';
import { type SignupAttributes } from './signup/model';
import { type SpamTagAttributes } from './spamTag/model';
import { type SubmissionWorkflowAttributes } from './submissionWorkflow/model';
import { type ReviewNewAttributes } from './review/model';
import { type ReviewerAttributes } from './reviewer/model';
import { type ThreadAttributes } from './thread/model';
import { type ThreadCommentAttributes } from './threadComment/model';
import { type ThreadEventAttributes } from './threadEvent/model';
import { type UserAttributes } from './user/model';
import { type UserDismissableAttributes } from './userDismissable/model';
import { type UserNotificationAttributes } from './userNotification/model';
import { type UserNotificationPreferencesAttributes } from './userNotificationPreferences/model';
import { type UserScopeVisitAttributes } from './userScopeVisit/model';
import { type UserSubscriptionAttributes } from './userSubscription/model';
import { type ActivityItemAttributes } from './activityItem/model';
import { type VisibilityAttributes } from './visibility/model';
import { type VisibilityUserAttributes } from './visibilityUser/model';
import { type WorkerTaskAttributes } from './workerTask/model';

export interface TypeMap {
	Collection: CollectionAttributes;
	CollectionAttribution: CollectionAttributionAttributes;
	CollectionPub: CollectionPubAttributes;
	Commenter: CommenterAttributes;
	Community: CommunityAttributes;
	CommunityAdmin: CommunityAdminAttributes;
	CrossrefDepositRecord: CrossrefDepositRecordAttributes;
	CustomScript: CustomScriptAttributes;
	DepositTarget: DepositTargetAttributes;
	Discussion: DiscussionAttributes;
	DiscussionAnchor: DiscussionAnchorAttributes;
	Doc: DocAttributes;
	Draft: DraftAttributes;
	Export: ExportAttributes;
	ExternalPublication: ExternalPublicationAttributes;
	FeatureFlag: FeatureFlagAttributes;
	FeatureFlagUser: FeatureFlagUserAttributes;
	FeatureFlagCommunity: FeatureFlagCommunityAttributes;
	ZoteroIntegration: ZoteroIntegrationAttributes;
	IntegrationDataOAuth1: IntegrationDataOAuth1Attributes;
	LandingPageFeature: LandingPageFeatureAttributes;
	Member: MemberAttributes;
	Merge: MergeAttributes;
	Organization: OrganizationAttributes;
	Page: PageAttributes;
	Pub: PubAttributes;
	PubAttribution: PubAttributionAttributes;
	PubEdge: PubEdgeAttributes;
	PubManager: PubManagerAttributes;
	PubVersion: PubVersionAttributes;
	PublicPermissions: PublicPermissionsAttributes;
	Release: ReleaseAttributes;
	ReviewEvent: ReviewEventAttributes;
	ScopeSummary: ScopeSummaryAttributes;
	Submission: SubmissionAttributes;
	Signup: SignupAttributes;
	SpamTag: SpamTagAttributes;
	SubmissionWorkflow: SubmissionWorkflowAttributes;
	ReviewNew: ReviewNewAttributes;
	Reviewer: ReviewerAttributes;
	Thread: ThreadAttributes;
	ThreadComment: ThreadCommentAttributes;
	ThreadEvent: ThreadEventAttributes;
	User: UserAttributes;
	UserDismissable: UserDismissableAttributes;
	UserNotification: UserNotificationAttributes;
	UserNotificationPreferences: UserNotificationPreferencesAttributes;
	UserScopeVisit: UserScopeVisitAttributes;
	UserSubscription: UserSubscriptionAttributes;
	ActivityItem: ActivityItemAttributes;
	Visibility: VisibilityAttributes;
	VisibilityUser: VisibilityUserAttributes;
	WorkerTask: WorkerTaskAttributes;
}
